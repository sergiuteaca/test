<?php
/**
 * Implements hook_form
 */
function contentmgr_menu()
{
  $items['contentmgr'] = array(
    'title' => 'Content Manager',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contentmgr_form'),
    'access arguments' => array('content access'),
  );
  return $items;
}

/********************************************************************/
/********************************************************************/
function contentmgr_form($form, &$form_state)
{

  if ($form_state['input']['op'] == 'Delete') {
    dpm($form_state,'ceva');
    $node = node_load($form_state['input']['nid']);
    return array_merge($form, contentmgr_delete_confirm($form, $form_state, $node));
  }

  $nodtitle = array();

  $nodes = node_load_multiple(array(), array('type' => 'article'));

  foreach ($nodes as $node) {
    $nodtitle[$node->nid] = $node->title;
  }

  $form['nid'] = array(
    '#type' => 'select',
    '#title' => t('Lista Titlurilor'),
    '#options' => $nodtitle,
    '#default_value' => 0,
  );

  $form['status'] = array(
    '#type' => 'select',
    '#title' => t('Publicat sau nu'),
    '#options' => array(
      0 => 'Unpublished',
      1 => 'Published'
    ),
  );

  $form['sticky'] = array(
    '#type' => 'select',
    '#title' => t('Promovat pentru prima pagina?'),
    '#options' => array(
      0 => 'No',
      1 => 'Yes'
    ),
  );

  $form['submitupdate'] = array(
    '#type' => 'submit',
    '#value' => 'Update',
  );

  $form['submitdelete'] = array(
    '#type' => 'submit',
    '#value' => 'Delete',
  );



  return $form;
}

function contentmgr_form_submit($form, &$form_state) {
  if (isset($form['nid'])) {
    $node = node_load($form['nid']['#value']);
    node_delete($form_state['values']['nid']);
    cache_clear_all();
    watchdog('content', '@type: deleted %title.', array('@type' => $node->type, '%title' => $node->title));
    drupal_set_message(t('@type %title has been deleted.', array('@type' => node_type_get_name($node), '%title' => $node->title)));
    $form_state['redirect'] = 'contentmgr';
  }

  $node = node_load($form_state['values']['nid']);
  if ($form_state['triggering_element']['#value'] == t('Delete')) {
    // Execute the term deletion.
    //return contentmgr_delete_confirm($form, $form_state, $node);
    // Rebuild the form to confirm term deletion.
    $form_state['rebuild'] = TRUE;
    $form_state['confirm_delete'] = TRUE;
    return;
  }



  if ($form_state['values']['op'] === 'Update') {
    $node->status = $form_state['values']['status'];
    $node->sticky = $form_state['values']['sticky'];
    node_save($node);
    drupal_set_message(t('Maladet, ai schimbat starea publicarii '));
  }
    //$regcode = $form_state;
   // drupal_goto('contentmgr/confirm/'); // this is menu callback for og_user_roles_register_confirm()


  return $form;
}

function contentmgr_delete_confirm($form, &$form_state, $node) {
  dpm('hi');
  $form['#node'] = $node;
  // Always provide entity id in the same form key as in the entity edit form.
  $form['nid'] = array('#type' => 'value', '#value' => $node->nid);
  //$form['#submit'][] = 'contentmgr_delete_confirm_submit';
  return confirm_form($form,
    t('Are you sure you want to delete %title?', array('%title' => $node->title)),
    'contentmgr',
    t('This action cannot be undone.'),
    t('Delete'),
    t('Cancel')
  );
}

function contentmgr_delete_confirm_submit($form, &$form_state) {
  dpm($form_state,'conf subm');


  //$form_state['redirect'] = 'contentmgr';
 }
